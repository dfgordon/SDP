0  ST$ = "S6,D1,V254"
1  DEF FN GT16(ADDR) = PEEK(ADDR) + 256*PEEK(ADDR+1)
2  DEF FN LO(X) = X - 256*INT(X/256): DEF FN HI(X) = INT(X/256)
3  DEF FN SA(N) = TA + FN GT16(TA + N*2)
4  DIM PN$(6): DIM X(3): DIM Y(3): DIM P(2): DIM V(2): DIM OK(2): REM X,Y=walls, P,V,OK=nodes
10  HCOLOR= 3: SCALE= 1: ROT= 0: TA = 16384: SN = 0: SC = 0: ADDR = TA
20  REM CURSORS
30  FOR I = 0 TO 13: READ BY: POKE 768+I,BY: NEXT

40  TEXT : HOME : PRINT "SDP SHAPE TOOL": VTAB 13: PRINT "SHAPES=";SN;" CAPACITY=";SC;" BYTES=";ADDR-TA: L = 3: P = 6: W$ = "SELECT- ": B$ = CHR$(13)
41  PN$(0) = "NEW": PN$(1) = "LOAD": PN$(2) = "ADD": PN$(3) = "VIEW": PN$(4) = "CATALOG": PN$(5) = "SAVE": PN$(6) = "EXIT": GOSUB 60
42  ON M+1 GOTO 70,100,200,1000,2000,800,900

50 REM FIND END
51 IF SN = 0 THEN ADDR = TA + 2 + SC*2: RETURN
52 ADDR = FN SA(SN)
53 IF PEEK(ADDR) = 0 THEN ADDR = ADDR + 1: RETURN
54 ADDR = ADDR + 1: GOTO 53

55 REM ADD ENTRY
56 SN = SN + 1: POKE TA + 2*SN, FN LO(ADDR-TA): POKE TA + 2*SN + 1, FN HI(ADDR-TA)
57 POKE TA,SN: RETURN

60  REM MENU SUBROUTINE
61  N = 0: M = 0: HTAB 1: VTAB L: PRINT "1) ";: INVERSE: PRINT PN$(0): NORMAL: IF P>0 THEN FOR I = 1 TO P: PRINT I+1;") ";PN$(I): NEXT
62  HTAB 1: VTAB L+P+2: PRINT W$;: GET A$: IF A$ = CHR$(13) OR A$ = B$ THEN RETURN
63  IF VAL(A$)>=1 AND VAL(A$)<=P+1 THEN M = VAL(A$)-1: RETURN
64  IF A$ = CHR$(8) OR A$ = CHR$(11) THEN N = M: M = M - 1: IF M<0 THEN M = P
65  IF A$ = CHR$(10) OR A$ = CHR$(21) THEN N = M: M = M + 1: IF M>P THEN M = 0
66  HTAB 4: VTAB N+L: PRINT PN$(N): INVERSE: HTAB 4: VTAB M+L: PRINT PN$(M): NORMAL: GOTO 62

70  REM NEW SHAPE TABLE
72  TEXT : HOME : INPUT "CAPACITY OF THIS TABLE :";SC: IF SC<1 OR SC>255 THEN 72
74  SN = 0: GOSUB 50: GOTO 40

80  REM PROMPT
81  HOME: VTAB 21: PRINT "MOVE=Y,G,J,SPC TOGGLE=Z DONE=Q": PRINT "PEN IS ";PEN$: RETURN

90  REM TOGGLE
91  IF PEN$ = "UP" THEN PEN$ = "DOWN": HTAB 8: VTAB 22: PRINT "DOWN";: CALL -868: RETURN
92  PEN$ = "UP": HTAB 8: VTAB 22: PRINT "UP";: CALL -868: RETURN

100  REM LOAD SHAPES
102  GOSUB 3000: ONERR GOTO 5000
104  PRINT  CHR$ (4);"BLOAD ";A$;",A$4000,S";S;",D";D;",V";V: POKE 216,0
106 SN =  PEEK (TA): IF SN = 0 THEN HOME: PRINT CHR$(7);"EMPTY ";: GET A$: GOTO 40
108 SC = ( FN GT16(TA + 2) - 2 ) / 2 : REM ASSUME STD STRUCTURE
110  GOSUB 50: GOTO 40

150 REM DRAW GRID
151 HGR: POKE 232,0: POKE 233,3
152 FOR I = 0 TO RW*4 STEP 4: HPLOT 0,I TO CL*4,I: NEXT
153 FOR I = 0 TO CL*4 STEP 4: HPLOT I,0 TO I,RW*4: NEXT
154 RETURN

200  HOME: IF SC=0 THEN PRINT CHR$(7);"NO TABLE ";: GET A$: GOTO 40
210  IF SN=SC THEN PRINT CHR$(7);"TABLE FULL ";: GET A$: GOTO 40
220  PRINT "CHOOSE SIZE OF SHAPE DESIGN GRID "
230  INPUT "COLUMNS ";CL: IF CL<2 OR CL>39 THEN 230
240  INPUT "ROWS ";RW: IF RW<2 OR RW>39 THEN 240
250  GOSUB 150
280  PEN$ = "UP": X(0) = 2: Y(0) = 2: P(0) = 0: V(0) =  - 1: ST = 0: MV = 0: GOSUB 55
290  HOME : VTAB 21: PRINT "MOVE=Y,G,J,SPACE  START=S"
291  PRINT "N.B. EVERY MOVE COSTS AFTER START"

300  MV = 0: POKE ADDR,0
302  V(MV) = -1: XDRAW 1 AT X(MV),Y(MV): GET V$: XDRAW 1 AT X(MV),Y(MV)
303  IF V$ = "S" THEN ST = 1: X(0) = X(MV): Y(0) = Y(MV): GOSUB 80: GOTO 300
306  IF V$ = "Q" AND ST = 1 THEN 500
307  IF V$ = "Z" AND ST = 1 THEN GOSUB 90: GOTO 302
308  IF V$ = "Y" AND Y(MV)>4 THEN V(MV) = 0: X(MV+1) = X(MV): Y(MV+1) = Y(MV) - 4
309  IF V$ = "J" AND X(MV)<(CL-1)*4 THEN V(MV) = 1: X(MV+1) = X(MV) + 4: Y(MV+1) = Y(MV)
310  IF V$ = " " AND Y(MV)<(RW-1)*4 THEN V(MV) = 2: X(MV+1) = X(MV): Y(MV+1) = Y(MV) + 4
311  IF V$ = "G" AND X(MV)>4 THEN V(MV) = 3: X(MV+1) = X(MV) - 4: Y(MV+1) = Y(MV)
320  IF V(MV) =  - 1 THEN PRINT CHR$(7);: GOTO 302
321  IF ST = 0 THEN X(0) = X(1): Y(0) = Y(1): GOTO 300
322  P(MV) = 0: IF PEN$="DOWN" THEN DRAW 2 AT X(MV),Y(MV): P(MV) = 1
330 MV = MV + 1: IF MV<3 THEN GOSUB 400: GOTO 302
350 OK(2) = V(2)>0 AND P(2)=0
351 OK(1) = (V(1)+P(1)) > 0 OR OK(2)
352 OK(0) = (V(0)+P(0)) > 0 OR OK(1) OR OK(2)
360 IF OK(0) + OK(1) + OK(2) = 0 THEN PRINT CHR$(7);"CANNOT TAKE ROUTE; REWINDING ";: GET A$: GOSUB 80: GOSUB 450: GOTO 300
370 IF OK(2) THEN POKE ADDR, V(0) + P(0)*4 + V(1)*8 + P(1)*32 + V(2)*64: ADDR = ADDR + 1: X(0) = X(3): Y(0) = Y(3): MV = 0: GOSUB 400: GOTO 300
380 IF OK(1) THEN POKE ADDR, V(0) + P(0)*4 + V(1)*8 + P(1)*32: ADDR = ADDR + 1: MV = 1: GOSUB 700: GOSUB 400: GOTO 302
390 POKE ADDR, V(0) + P(0)*4: ADDR = ADDR + 1: MV = 2: GOSUB 700: GOSUB 400: GOTO 302

400 REM CLOSE
410 I = 0: IF MV > 0 THEN I = I + V(0)+P(0)*4
420 IF MV > 1 THEN I = I + V(1)*8 + P(1)*32
430 POKE ADDR,I: POKE ADDR+1,0
440 POKE 233,64: DRAW SN AT CL*6,RW*2: POKE 233,3: RETURN

450 IF P(2) THEN HCOLOR= 0: DRAW 2 AT X(2),Y(2): HCOLOR= 3
460 POKE ADDR,0: RETURN

500 REM DONE
510 HOME : VTAB 21: PRINT "SHAPE ";SN;": KEEP=K, DISCARD=D, BACK=ESC ";: GET A$: IF A$ <> "K" AND A$ <> "D" AND A$ <> CHR$(27) THEN 510
520 IF A$ = "D" THEN SN = SN - 1: POKE TA,SN: GOSUB 50: GOTO 40
530 IF A$ = "K" THEN ADDR = ADDR + 1 + (PEEK(ADDR)>0): GOTO 40
540 GOSUB 80: GOTO 302 

700  REM GO BACK
710  IF MV = 1 THEN X(0) = X(2): X(1) = X(3): Y(0) = Y(2): Y(1) = Y(3): P(0) = P(2): V(0) = V(2): RETURN
720  X(0) = X(1): X(1) = X(2): X(2) = X(3): Y(0) = Y(1): Y(1) = Y(2): Y(2) = Y(3)
730  P(0) = P(1): P(1) = P(2): V(0) = V(1): V(1) = V(2): RETURN

800  REM SAVE TO DISK
810  IF ADDR<TA+3 THEN HOME: PRINT "NOTHING TO SAVE ";: GET A$: GOTO 40
820  GOSUB 3000: ONERR GOTO 5000
830  PRINT  CHR$ (4);"BSAVE ";A$;",A$4000,L";ADDR - TA;",S";S;",D";D;",V";V: POKE 216,0: GOTO 40

900  REM EXIT BACK TO SDP MAIN
910  TEXT : HOME : PRINT "PUT SDP IN ";ST$
915  INPUT "PRESS ENTER WHEN READY";A$
920  PRINT : PRINT CHR$(4);"RUN HELLO,";ST$

1000 REM VIEW
1001 IF SN=0 THEN 40
1010 VX = 140: VN = 1: VR = 0: VS = 1: VC = 3: POKE 232,0: POKE 233,64: HGR
1020 HOME: VTAB 21: PRINT "ARROWS,Z,X,L,C,R,S,Q": PRINT "SHAPE ";VN;" R=";VR;" S=";VS;" C=";VC: ROT= VR: SCALE= VS: HCOLOR= VC: DRAW VN AT VX,80
1030 GET B$: HCOLOR= 0: DRAW VN AT VX,80
1035 IF B$=CHR$(8) THEN VN = VN - 1: IF VN<1 THEN VN=SN
1040 IF B$=CHR$(21) THEN VN = VN + 1: IF VN>SN THEN VN = 1
1041 IF B$="Z" THEN VX = VX - 1
1042 IF B$="X" THEN VX = VX + 1
1050 IF B$="Q" THEN POKE 232,0: POKE 233,3: ROT= 0: SCALE= 1: HCOLOR= 3: GOTO 40
1060 IF B$="R" THEN VR = VR + 16/VS: IF VR>63 THEN VR = 0
1070 IF B$="S" THEN VS = VS * 2: VR = 0: IF VS>8 THEN VS = 1
1075 IF B$="L" THEN GOSUB 1100
1079 IF B$="C" THEN VC = VC + 1: IF VC>7 THEN VC = 0
1080 GOTO 1020

1100  REM LIST
1110  TEXT: HOME: I = FN SA(VN): PRINT "BITS HIGH -> LOW:"
1120  FOR J = 7 TO 0 STEP -1: M = INT(PEEK(I)/(2^J)): M = M - 2*INT(M/2): PRINT M;: IF J=6 OR J=3 THEN PRINT " ";
1130  NEXT: PRINT " (";PEEK(I);")": IF PEEK(I)>0 THEN I = I + 1: GOTO 1120
1140  GET A$: POKE -16304,0: RETURN

2000 REM CATALOG
2010 HOME: VTAB 21: GOSUB 3005: ONERR GOTO 5000
2020 PRINT: PRINT CHR$(4);"CATALOG,S";S;",D";D: POKE 216,0: GET A$: GOTO 40

3000  REM CHOOSE MASS STORAGE
3001  HOME : VTAB 21: INPUT "FILENAME: ";A$
3005  INPUT "SLOT (6): ";B$: S =  VAL (B$): IF B$ = "" THEN S = 6
3030  INPUT "DRIVE (1): ";B$: D =  VAL (B$): IF B$ = "" THEN D = 1
3060  INPUT "VOLUME (254): ";B$: V =  VAL (B$): IF B$ = "" THEN V = 254
3085  INPUT "PRESS ENTER WHEN READY";B$: RETURN

4000 REM CURSORS
4010 DATA 2,0,6,0,8,0,6,0,53,63,36,45,6,0

5000 REM ERR
5010 PRINT: PRINT "DISK ERROR ";: GET A$: POKE 216,0: GOTO 40